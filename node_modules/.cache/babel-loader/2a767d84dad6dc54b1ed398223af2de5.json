{"ast":null,"code":"var _jsxFileName = \"/Users/crashykd/Development/Phase-2/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport AddExercise from \"./AddExercise\";\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExercisePage() {\n  _s();\n\n  const [exercises, setExercises] = useState([]);\n  const [myExercises, setMyExercises] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    fetch(`https://exercisedb.p.rapidapi.com/exercises?rapidapi-key=77e7b80605msh242886ef2c7d7e8p1041adjsn30fa46c2ba04`).then(resp => resp.json()).then(data => {\n      setExercises(data);\n      bodyPartTypes(data);\n    });\n  }, []);\n\n  function bodyPartTypes(data) {\n    const allBodyParts = data.map(exercise => exercise.bodyPart);\n    const uniqueBodyParts = {};\n\n    for (let i = 0; i < allBodyParts.length; i++) {\n      console.log(allBodyParts[i]);\n\n      if (!uniqueBodyParts[allBodyParts[i]]) {\n        uniqueBodyParts[allBodyParts[i]] = true;\n      }\n    }\n\n    console.log(uniqueBodyParts);\n  }\n\n  function handleAddExercise(excerciseToAdd) {\n    const myExerciseList = myExercises.find(exercise => exercise.id === excerciseToAdd.id);\n\n    if (!myExerciseList) {\n      setMyExercises([...myExercises, excerciseToAdd]);\n    }\n  }\n\n  function handleRemoveExercise(excerciseToRemove) {\n    setMyExercises(myExercises => myExercises.filter(exercise => exercise.id !== excerciseToRemove.id));\n  }\n\n  const displayedExercises = exercises.filter(exercise => {\n    return exercise.target.toLowerCase().includes(searchTerm.toLowerCase());\n  }); // const sortedExercise = [...exercises].sort((exercise1, exercise2) => {\n  //   if (sortBy === \"Alphabetically\") {\n  //     return exercise1.name.localeCompare(exercise2.name);\n  //   } else {\n  //     return exercise1.bodyPart - stock2.bodyPart;\n  //   }\n  // });\n  // const filteredExercise = sortedExercise.filter(\n  //   (exercise) => exercise.type === filterBy\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddExercise, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseList, {\n      exercises: displayedExercises,\n      onAddExercise: handleAddExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyExercises, {\n      myExercises: myExercises,\n      onRemoveExercise: handleRemoveExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExercisePage, \"BHgH/kKpd5Z45fG+n/uIIO1Kh4A=\");\n\n_c = ExercisePage;\nexport default ExercisePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"sources":["/Users/crashykd/Development/Phase-2/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js"],"names":["useState","useEffect","AddExercise","ExerciseList","MyExercises","Search","ExercisePage","exercises","setExercises","myExercises","setMyExercises","searchTerm","setSearchTerm","fetch","then","resp","json","data","bodyPartTypes","allBodyParts","map","exercise","bodyPart","uniqueBodyParts","i","length","console","log","handleAddExercise","excerciseToAdd","myExerciseList","find","id","handleRemoveExercise","excerciseToRemove","filter","displayedExercises","target","toLowerCase","includes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport AddExercise from \"./AddExercise\"\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\nimport Search from \"./Search\";\n\n\n\nfunction ExercisePage() {\n\n  const [exercises, setExercises] = useState([])\n  const [myExercises, setMyExercises] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n\n  useEffect(() => {\n    fetch(`https://exercisedb.p.rapidapi.com/exercises?rapidapi-key=77e7b80605msh242886ef2c7d7e8p1041adjsn30fa46c2ba04`)\n      .then(resp => resp.json())\n      .then(data => {\n        setExercises(data)\n        bodyPartTypes(data)\n      });\n  }, [])\n  \nfunction bodyPartTypes(data){\n  const allBodyParts = data.map(exercise => exercise.bodyPart );\n\n  const uniqueBodyParts = {};\n\n  for(let i=0; i<allBodyParts.length ; i++){\n    console.log(allBodyParts[i])\n    if(!uniqueBodyParts[allBodyParts[i]]){\n      uniqueBodyParts[allBodyParts[i]] = true\n    }\n  }\n  console.log(uniqueBodyParts)\n}\n  \nfunction handleAddExercise(excerciseToAdd) {\n   \n    const myExerciseList = myExercises.find(\n      (exercise) => exercise.id === excerciseToAdd.id\n    );\n   \n    if (!myExerciseList) {\n      setMyExercises([...myExercises, excerciseToAdd]);\n    }\n  }\n\n  function handleRemoveExercise(excerciseToRemove) {\n    setMyExercises((myExercises) =>\n      myExercises.filter((exercise) => exercise.id !== excerciseToRemove.id)\n    );\n  }\n\n  const displayedExercises = exercises.filter((exercise) => {\n    return exercise.target.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  // const sortedExercise = [...exercises].sort((exercise1, exercise2) => {\n  //   if (sortBy === \"Alphabetically\") {\n  //     return exercise1.name.localeCompare(exercise2.name);\n  //   } else {\n  //     return exercise1.bodyPart - stock2.bodyPart;\n  //   }\n  // });\n\n  // const filteredExercise = sortedExercise.filter(\n  //   (exercise) => exercise.type === filterBy\n  // );\n\n  return (\n    <main>\n      <Search\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm} />\n      <AddExercise />\n      <ExerciseList\n        exercises={displayedExercises}\n        onAddExercise={handleAddExercise} />\n      <MyExercises\n        myExercises={myExercises}\n        onRemoveExercise={handleRemoveExercise} />\n    </main>\n  );\n}\n\nexport default ExercisePage;"]},"metadata":{},"sourceType":"module"}