{"ast":null,"code":"var _jsxFileName = \"/home/elikape760/Development/code/Mod2/flatiron-workout-app/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport AddExercise from \"./AddExercise\";\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExercisePage() {\n  _s();\n\n  const [exercises, setExercises] = useState([]);\n  const [myExercises, setMyExercises] = useState([]);\n  useEffect(() => {\n    fetch(`https://exercisedb.p.rapidapi.com/exercises?rapidapi-key=77e7b80605msh242886ef2c7d7e8p1041adjsn30fa46c2ba04`) // fetch(`http://localhost:6001/posts`)\n    .then(resp => resp.json()).then(data => setExercises(data));\n  }, []);\n\n  function handleAddExercise(excerciseToAdd) {\n    const myExerciseList = myExercises.find(exercise => exercise.id === excerciseToAdd.id);\n\n    if (!myExerciseList) {\n      setMyExercises([...myExercises, excerciseToAdd]);\n    }\n  }\n\n  function handleRemoveExercise(excerciseToRemove) {\n    setMyExercises(myExercises => myExercises.filter(exercise => exercise.id !== excerciseToRemove.id));\n  }\n\n  const sortedExercise = [...exercise].sort((stock1, stock2) => {\n    if (sortBy === \"Alphabetically\") {\n      return stock1.name.localeCompare(stock2.name);\n    } else {\n      return stock1.price - stock2.price;\n    }\n  });\n  const filteredExercise = sortedExercise.filter(exercise => exercise.type === filterBy);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(AddExercise, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseList, {\n      exercises: filteredExercise,\n      onAddExercise: handleAddExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyExercises, {\n      myExercises: myExercises,\n      onRemoveExercise: handleRemoveExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExercisePage, \"4G8TqZEF0Q7qG5KzttcVwFw6qv4=\");\n\n_c = ExercisePage;\nexport default ExercisePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"sources":["/home/elikape760/Development/code/Mod2/flatiron-workout-app/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js"],"names":["useState","useEffect","AddExercise","ExerciseList","MyExercises","ExercisePage","exercises","setExercises","myExercises","setMyExercises","fetch","then","resp","json","data","handleAddExercise","excerciseToAdd","myExerciseList","find","exercise","id","handleRemoveExercise","excerciseToRemove","filter","sortedExercise","sort","stock1","stock2","sortBy","name","localeCompare","price","filteredExercise","type","filterBy"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAIA,SAASC,YAAT,GAAwB;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAE,6GAAF,CAAL,CACE;AADF,KAEGC,IAFH,CAEQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAFhB,EAGGF,IAHH,CAGQG,IAAI,IAAIP,YAAY,CAACO,IAAD,CAH5B;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,WAASC,iBAAT,CAA2BC,cAA3B,EAA2C;AACzC,UAAMC,cAAc,GAAGT,WAAW,CAACU,IAAZ,CACpBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,cAAc,CAACI,EADxB,CAAvB;;AAGA,QAAI,CAACH,cAAL,EAAqB;AACnBR,MAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBQ,cAAjB,CAAD,CAAd;AACD;AACF;;AAED,WAASK,oBAAT,CAA8BC,iBAA9B,EAAiD;AAC/Cb,IAAAA,cAAc,CAAED,WAAD,IACfA,WAAW,CAACe,MAAZ,CAAoBJ,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBE,iBAAiB,CAACF,EAAnE,CADc,CAAd;AAGD;;AAED,QAAMI,cAAc,GAAG,CAAC,GAAGL,QAAJ,EAAcM,IAAd,CAAmB,CAACC,MAAD,EAASC,MAAT,KAAoB;AAC5D,QAAIC,MAAM,KAAK,gBAAf,EAAiC;AAC/B,aAAOF,MAAM,CAACG,IAAP,CAAYC,aAAZ,CAA0BH,MAAM,CAACE,IAAjC,CAAP;AACD,KAFD,MAEO;AACL,aAAOH,MAAM,CAACK,KAAP,GAAeJ,MAAM,CAACI,KAA7B;AACD;AACF,GANsB,CAAvB;AAQA,QAAMC,gBAAgB,GAAGR,cAAc,CAACD,MAAf,CACtBJ,QAAD,IAAcA,QAAQ,CAACc,IAAT,KAAkBC,QADT,CAAzB;AAIA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEF,gBAAzB;AAA2C,MAAA,aAAa,EAAEjB;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAEP,WAA1B;AAAuC,MAAA,gBAAgB,EAAEa;AAAzD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA9CQhB,Y;;KAAAA,Y;AAgDT,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport AddExercise from \"./AddExercise\"\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\n\n\n\nfunction ExercisePage() {\n\n  const [exercises, setExercises] = useState([])\n  const [myExercises, setMyExercises] = useState([])\n\n  useEffect(() => {\n    fetch(`https://exercisedb.p.rapidapi.com/exercises?rapidapi-key=77e7b80605msh242886ef2c7d7e8p1041adjsn30fa46c2ba04`)\n      // fetch(`http://localhost:6001/posts`)\n      .then(resp => resp.json())\n      .then(data => setExercises(data));\n  }, [])\n\n  function handleAddExercise(excerciseToAdd) {\n    const myExerciseList = myExercises.find(\n      (exercise) => exercise.id === excerciseToAdd.id\n    );\n    if (!myExerciseList) {\n      setMyExercises([...myExercises, excerciseToAdd]);\n    }\n  }\n\n  function handleRemoveExercise(excerciseToRemove) {\n    setMyExercises((myExercises) =>\n    myExercises.filter((exercise) => exercise.id !== excerciseToRemove.id)\n    );\n  }\n\n  const sortedExercise = [...exercise].sort((stock1, stock2) => {\n    if (sortBy === \"Alphabetically\") {\n      return stock1.name.localeCompare(stock2.name);\n    } else {\n      return stock1.price - stock2.price;\n    }\n  });\n\n  const filteredExercise = sortedExercise.filter(\n    (exercise) => exercise.type === filterBy\n  );\n\n  return (\n    <main>\n      <AddExercise />\n      <ExerciseList exercises={filteredExercise} onAddExercise={handleAddExercise} />\n      <MyExercises myExercises={myExercises} onRemoveExercise={handleRemoveExercise} />\n    </main>\n  );\n}\n\nexport default ExercisePage;"]},"metadata":{},"sourceType":"module"}